{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, createContext, useContext, useEffect } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { NativeBaseProvider } from \"native-base\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth } from \"./src/components/config/firebase\";\nimport Loading from \"./src/components/layout/Loading\";\nimport AuthStack from \"./src/components/stacks/AuthStack\";\nimport AppStack from \"./src/components/stacks/AppStack\";\nimport ParkingScreen from \"./src/components/screens/home-tab/ParkingScreen\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar AuthenticatedUserContext = createContext({});\n\nvar AuthenticatedUserProvider = function AuthenticatedUserProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  return _jsx(AuthenticatedUserContext.Provider, {\n    value: {\n      user: user,\n      setUser: setUser\n    },\n    children: children\n  });\n};\n\nfunction RootNavigator() {\n  var _useContext = useContext(AuthenticatedUserContext),\n      user = _useContext.user,\n      setUser = _useContext.setUser;\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  useEffect(function () {\n    var unsubscribeAuth = onAuthStateChanged(auth, function _callee(authenticatedUser) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              authenticatedUser ? setUser(authenticatedUser) : setUser(null);\n              setIsLoading(false);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n    return unsubscribeAuth;\n  }, [user]);\n\n  if (isLoading) {\n    return _jsx(Loading, {});\n  }\n\n  return _jsx(_Fragment, {\n    children: user ? _jsx(AppStack, {}) : _jsx(AuthStack, {})\n  });\n}\n\nvar App = function App() {\n  return _jsx(NativeBaseProvider, {\n    children: _jsx(AuthenticatedUserProvider, {\n      children: _jsx(NavigationContainer, {\n        children: _jsx(RootNavigator, {})\n      })\n    })\n  });\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/bever/OneDrive/Documents/GitHub/parkr/client/App.js"],"names":["React","useState","createContext","useContext","useEffect","StatusBar","NativeBaseProvider","NavigationContainer","onAuthStateChanged","auth","Loading","AuthStack","AppStack","ParkingScreen","SafeAreaView","AuthenticatedUserContext","AuthenticatedUserProvider","children","user","setUser","RootNavigator","isLoading","setIsLoading","unsubscribeAuth","authenticatedUser","App"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,UAAzC,EAAqDC,SAArD,QAAsE,OAAtE;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,kBAAT,QAAmC,aAAnC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,QAAmC,eAAnC;AACA,SAASC,IAAT;AACA,OAAOC,OAAP;AACA,OAAOC,SAAP;AACA,OAAOC,QAAP;AACA,OAAOC,aAAP;AACA,SAASC,YAAT,QAA6B,gCAA7B;;;AAIA,IAAMC,wBAAwB,GAAGb,aAAa,CAAC,EAAD,CAA9C;;AAEA,IAAMc,yBAAyB,GAAG,SAA5BA,yBAA4B,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAClD,kBAAwBhB,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOiB,IAAP;AAAA,MAAaC,OAAb;;AAEA,SACE,KAAC,wBAAD,CAA0B,QAA1B;AAAmC,IAAA,KAAK,EAAE;AAAED,MAAAA,IAAI,EAAJA,IAAF;AAAQC,MAAAA,OAAO,EAAPA;AAAR,KAA1C;AAAA,cACGF;AADH,IADF;AAKD,CARD;;AAYA,SAASG,aAAT,GAAyB;AACvB,oBAA0BjB,UAAU,CAACY,wBAAD,CAApC;AAAA,MAAQG,IAAR,eAAQA,IAAR;AAAA,MAAcC,OAAd,eAAcA,OAAd;;AACA,mBAAkClB,QAAQ,CAAC,IAAD,CAA1C;AAAA;AAAA,MAAOoB,SAAP;AAAA,MAAkBC,YAAlB;;AAEAlB,EAAAA,SAAS,CAAC,YAAM;AAEd,QAAMmB,eAAe,GAAGf,kBAAkB,CACxCC,IADwC,EAExC,iBAAOe,iBAAP;AAAA;AAAA;AAAA;AAAA;AACEA,cAAAA,iBAAiB,GAAGL,OAAO,CAACK,iBAAD,CAAV,GAAgCL,OAAO,CAAC,IAAD,CAAxD;AACAG,cAAAA,YAAY,CAAC,KAAD,CAAZ;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFwC,CAA1C;AASA,WAAOC,eAAP;AACD,GAZQ,EAYN,CAACL,IAAD,CAZM,CAAT;;AAcA,MAAIG,SAAJ,EAAe;AACb,WAAO,KAAC,OAAD,KAAP;AACD;;AAED,SAAO;AAAA,cAAGH,IAAI,GAAG,KAAC,QAAD,KAAH,GAAkB,KAAC,SAAD;AAAzB,IAAP;AAKD;;AAED,IAAMO,GAAG,GAAG,SAANA,GAAM,GAAM;AAChB,SACE,KAAC,kBAAD;AAAA,cACE,KAAC,yBAAD;AAAA,gBACE,KAAC,mBAAD;AAAA,kBACE,KAAC,aAAD;AADF;AADF;AADF,IADF;AASD,CAVD;;AAYA,eAAeA,GAAf","sourcesContent":["import React, { useState, createContext, useContext, useEffect } from \"react\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { NativeBaseProvider } from \"native-base\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport { auth } from \"./src/components/config/firebase\";\r\nimport Loading from \"./src/components/layout/Loading\";\r\nimport AuthStack from \"./src/components/stacks/AuthStack\";\r\nimport AppStack from \"./src/components/stacks/AppStack\";\r\nimport ParkingScreen from \"./src/components/screens/home-tab/ParkingScreen\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\n\r\n// user context:\r\n\r\nconst AuthenticatedUserContext = createContext({});\r\n\r\nconst AuthenticatedUserProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  return (\r\n    <AuthenticatedUserContext.Provider value={{ user, setUser }}>\r\n      {children}\r\n    </AuthenticatedUserContext.Provider>\r\n  );\r\n};\r\n\r\n// root navigator:\r\n\r\nfunction RootNavigator() {\r\n  const { user, setUser } = useContext(AuthenticatedUserContext);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // onAuthStateChanged returns an unsubscriber\r\n    const unsubscribeAuth = onAuthStateChanged(\r\n      auth,\r\n      async (authenticatedUser) => {\r\n        authenticatedUser ? setUser(authenticatedUser) : setUser(null);\r\n        setIsLoading(false);\r\n      }\r\n    );\r\n\r\n    // unsubscribe auth listener on unmount\r\n    return unsubscribeAuth;\r\n  }, [user]);\r\n\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return <>{user ? <AppStack /> : <AuthStack />}</>;\r\n\r\n  // return <AuthStack />;\r\n\r\n  // return <AppStack />;\r\n}\r\n\r\nconst App = () => {\r\n  return (\r\n    <NativeBaseProvider>\r\n      <AuthenticatedUserProvider>\r\n        <NavigationContainer>\r\n          <RootNavigator />\r\n        </NavigationContainer>\r\n      </AuthenticatedUserProvider>\r\n    </NativeBaseProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}