{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { Box, Text, Heading, VStack, FormControl, Input, Link, Button, HStack, Center } from \"native-base\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../../config/firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var onHandleLogin = function onHandleLogin() {\n    if (email !== \"\" && password !== \"\") {\n      signInWithEmailAndPassword(auth, email, password).then(function () {\n        return console.log(\"Login success\");\n      }).catch(function (err) {\n        return console.log(\"Login err: \" + err);\n      });\n    }\n  };\n\n  return _jsx(Center, {\n    flex: 1,\n    px: \"3\",\n    children: _jsx(Center, {\n      w: \"100%\",\n      children: _jsxs(Box, {\n        safeArea: true,\n        p: \"2\",\n        py: \"8\",\n        w: \"90%\",\n        maxW: \"290\",\n        children: [_jsx(Heading, {\n          size: \"xl\",\n          fontWeight: \"600\",\n          color: \"coolGray.800\",\n          _dark: {\n            color: \"warmGray.50\"\n          },\n          children: \"Welcome to Parkr\"\n        }), _jsx(Heading, {\n          mt: \"1\",\n          _dark: {\n            color: \"warmGray.200\"\n          },\n          color: \"coolGray.600\",\n          fontWeight: \"medium\",\n          size: \"md\",\n          children: \"Sign in to continue!\"\n        }), _jsxs(VStack, {\n          space: 3,\n          mt: \"5\",\n          children: [_jsxs(FormControl, {\n            children: [_jsx(FormControl.Label, {\n              children: \"Email ID\"\n            }), _jsx(Input, {\n              borderColor: \"grey\",\n              autoCapitalize: \"none\",\n              autoCorrect: false,\n              keyboardType: \"email-address\",\n              textContentType: \"emailAddress\",\n              autoFocus: true,\n              value: email,\n              onChangeText: function onChangeText(text) {\n                return setEmail(text);\n              }\n            })]\n          }), _jsxs(FormControl, {\n            children: [_jsx(FormControl.Label, {\n              children: \"Password\"\n            }), _jsx(Input, {\n              borderColor: \"grey\",\n              type: \"password\",\n              autoCapitalize: \"none\",\n              autoCorrect: false,\n              secureTextEntry: true,\n              value: password,\n              onChangeText: function onChangeText(text) {\n                return setPassword(text);\n              }\n            }), _jsx(Link, {\n              _text: {\n                fontSize: \"md\",\n                fontWeight: \"500\",\n                color: \"rgb(94,39,161)\"\n              },\n              alignSelf: \"flex-end\",\n              mt: \"1\",\n              children: \"Forget Password?\"\n            })]\n          }), _jsx(Button, {\n            mt: \"2\",\n            size: \"lg\",\n            colorScheme: \"rgb(94,39,161)\",\n            onPress: onHandleLogin,\n            children: \"Sign in\"\n          }), _jsxs(HStack, {\n            mt: \"6\",\n            justifyContent: \"center\",\n            children: [_jsxs(Text, {\n              fontSize: \"md\",\n              color: \"coolGray.600\",\n              _dark: {\n                color: \"warmGray.200\"\n              },\n              children: [\"I'm a new user.\", \" \"]\n            }), _jsx(Link, {\n              _text: {\n                color: \"rgb(94,39,161)\",\n                fontWeight: \"medium\",\n                fontSize: \"md\"\n              },\n              href: \"#\",\n              onPress: function onPress() {\n                return navigation.navigate(\"SignupScreen\");\n              },\n              children: \"Sign Up\"\n            })]\n          })]\n        })]\n      })\n    })\n  });\n};\n\nexport default LoginScreen;","map":{"version":3,"sources":["C:/Users/bever/OneDrive/Documents/GitHub/parkr/client/src/components/screens/auth-stack/LoginScreen.js"],"names":["React","useState","Box","Text","Heading","VStack","FormControl","Input","Link","Button","HStack","Center","signInWithEmailAndPassword","auth","LoginScreen","navigation","email","setEmail","password","setPassword","onHandleLogin","then","console","log","catch","err","color","text","fontSize","fontWeight","navigate"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  Heading,\r\n  VStack,\r\n  FormControl,\r\n  Input,\r\n  Link,\r\n  Button,\r\n  HStack,\r\n  Center,\r\n} from \"native-base\";\r\n\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { auth } from \"../../config/firebase\";\r\n\r\nconst LoginScreen = ({ navigation }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const onHandleLogin = () => {\r\n    if (email !== \"\" && password !== \"\") {\r\n      signInWithEmailAndPassword(auth, email, password)\r\n        .then(() => console.log(\"Login success\"))\r\n        .catch((err) => console.log(`Login err: ${err}`));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Center flex={1} px=\"3\">\r\n      <Center w=\"100%\">\r\n        <Box safeArea p=\"2\" py=\"8\" w=\"90%\" maxW=\"290\">\r\n          <Heading size=\"xl\" fontWeight=\"600\" color=\"coolGray.800\" _dark={{\r\n        color: \"warmGray.50\"\r\n      }}>\r\n          Welcome to Parkr\r\n        </Heading>\r\n          <Heading\r\n            mt=\"1\"\r\n            _dark={{\r\n              color: \"warmGray.200\",\r\n            }}\r\n            color=\"coolGray.600\"\r\n            fontWeight=\"medium\"\r\n            size=\"md\"\r\n          >\r\n            Sign in to continue!\r\n          </Heading>\r\n\r\n          <VStack space={3} mt=\"5\">\r\n            <FormControl>\r\n              <FormControl.Label>Email ID</FormControl.Label>\r\n              <Input\r\n                borderColor=\"grey\"\r\n                autoCapitalize=\"none\"\r\n                autoCorrect={false}\r\n                keyboardType=\"email-address\"\r\n                textContentType=\"emailAddress\"\r\n                autoFocus={true}\r\n                value={email}\r\n                onChangeText={(text) => setEmail(text)}\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <FormControl.Label>Password</FormControl.Label>\r\n              <Input\r\n                borderColor=\"grey\"\r\n                type=\"password\"\r\n                autoCapitalize=\"none\"\r\n                autoCorrect={false}\r\n                secureTextEntry={true}\r\n                value={password}\r\n                onChangeText={(text) => setPassword(text)}\r\n              />\r\n              <Link\r\n                _text={{\r\n                  fontSize: \"md\",\r\n                  fontWeight: \"500\",\r\n                  color: \"rgb(94,39,161)\",\r\n                }}\r\n                alignSelf=\"flex-end\"\r\n                mt=\"1\"\r\n              >\r\n                Forget Password?\r\n              </Link>\r\n            </FormControl>\r\n            <Button\r\n              mt=\"2\"\r\n              size=\"lg\"\r\n              colorScheme=\"rgb(94,39,161)\"\r\n              onPress={onHandleLogin}\r\n            >\r\n              Sign in\r\n            </Button>\r\n            <HStack mt=\"6\" justifyContent=\"center\">\r\n              <Text\r\n                fontSize=\"md\"\r\n                color=\"coolGray.600\"\r\n                _dark={{\r\n                  color: \"warmGray.200\",\r\n                }}\r\n              >\r\n                I'm a new user.{\" \"}\r\n              </Text>\r\n              <Link\r\n                _text={{\r\n                  color: \"rgb(94,39,161)\",\r\n                  fontWeight: \"medium\",\r\n                  fontSize: \"md\",\r\n                }}\r\n                href=\"#\"\r\n                onPress={() => navigation.navigate(\"SignupScreen\")}\r\n              >\r\n                Sign Up\r\n              </Link>\r\n            </HStack>\r\n          </VStack>\r\n        </Box>\r\n      </Center>\r\n    </Center>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n"]},"metadata":{},"sourceType":"module"}